{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMemo } from \"react\"; // export const useSortedClues = (clues, sort) => {\n//   const sortedClues = useMemo(() => {\n//     if (sort) {\n//       return [...clues].sort((a, b) => a[sort].localeCompare(b[sort]));\n//     }\n//     return clues;\n//   }, [sort, clues]);\n//   return sortedClues;\n// };\n\nexport const useClues = (clues, sort, query) => {\n  _s();\n\n  // const sortedClues = useSortedClues(clues, sort);\n  const sortedClues = clues;\n  const sortedAndSearchedClues = useMemo(() => {\n    return sortedClues.filter(clue => clue.question.toLowerCase().includes(query.toLowerCase())).filter(!(clue => clue.question.length === 0));\n  }, [query, sortedClues]);\n  return sortedAndSearchedClues;\n};\n\n_s(useClues, \"va9/qs8FHt1qWyi3+Kq5I2z9yOk=\");","map":{"version":3,"sources":["C:/Users/keenm/Desktop/Web Final Project/quizine/src/components/hooks/useClues.js"],"names":["React","useMemo","useClues","clues","sort","query","sortedClues","sortedAndSearchedClues","filter","clue","question","toLowerCase","includes","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,KAAwB;AAAA;;AAC9C;AACA,QAAMC,WAAW,GAAGH,KAApB;AACA,QAAMI,sBAAsB,GAAGN,OAAO,CAAC,MAAM;AAC3C,WAAOK,WAAW,CACfE,MADI,CACIC,IAAD,IACNA,IAAI,CAACC,QAAL,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCP,KAAK,CAACM,WAAN,EAArC,CAFG,EAIJH,MAJI,CAIG,EAAGC,IAAD,IAAUA,IAAI,CAACC,QAAL,CAAcG,MAAd,KAAyB,CAArC,CAJH,CAAP;AAKD,GANqC,EAMnC,CAACR,KAAD,EAAQC,WAAR,CANmC,CAAtC;AAQA,SAAOC,sBAAP;AACD,CAZM;;GAAML,Q","sourcesContent":["import React from \"react\";\r\nimport { useMemo } from \"react\";\r\n\r\n// export const useSortedClues = (clues, sort) => {\r\n//   const sortedClues = useMemo(() => {\r\n//     if (sort) {\r\n//       return [...clues].sort((a, b) => a[sort].localeCompare(b[sort]));\r\n//     }\r\n//     return clues;\r\n//   }, [sort, clues]);\r\n//   return sortedClues;\r\n// };\r\n\r\nexport const useClues = (clues, sort, query) => {\r\n  // const sortedClues = useSortedClues(clues, sort);\r\n  const sortedClues = clues;\r\n  const sortedAndSearchedClues = useMemo(() => {\r\n    return sortedClues\r\n      .filter((clue) =>\r\n        clue.question.toLowerCase().includes(query.toLowerCase())\r\n      )\r\n      .filter(!((clue) => clue.question.length === 0));\r\n  }, [query, sortedClues]);\r\n\r\n  return sortedAndSearchedClues;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}