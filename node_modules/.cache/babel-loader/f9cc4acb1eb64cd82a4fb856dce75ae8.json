{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keenm\\\\Desktop\\\\Web Final Project\\\\quizine\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ClueList from \"./components/search/ClueList\";\nimport { useFetchingClues } from \"./components/hooks/useFetchingClues\";\nimport ClueService from \"./components/API/ClueService\";\nimport Loader from \"./components/UI/Loader/Loader\";\nimport { useClues } from \"./components/hooks/useClues\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [clues, setClues] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: \"\",\n    query: \"\"\n  });\n  const [fetchClues, isClueLoading, clueError] = useFetchingClues(async () => {\n    const clues = await ClueService.getAll();\n    setClues(clues);\n  });\n  const sortedAndSearchedClues = useClues(clues, filter.sort, filter.query);\n\n  const sortClues = sort => {\n    setFilter.sort(sort);\n  };\n\n  useEffect(() => {\n    fetchClues();\n  }, []); // const [modal, setModal] = useState(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(ClueFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isClueLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ClueList, {\n      clues: clues,\n      title: clues.length + \" Results found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XIQKkn+gQ5lk1zh0KeaCV7jgYAI=\", false, function () {\n  return [useFetchingClues, useClues];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/keenm/Desktop/Web Final Project/quizine/src/App.js"],"names":["React","useState","useEffect","ClueList","useFetchingClues","ClueService","Loader","useClues","App","clues","setClues","filter","setFilter","sort","query","fetchClues","isClueLoading","clueError","getAll","sortedAndSearchedClues","sortClues","display","justifyContent","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC;AAAEY,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,KAAK,EAAE;AAAnB,GAAD,CAApC;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,EAA4BC,SAA5B,IAAyCb,gBAAgB,CAAC,YAAY;AAC1E,UAAMK,KAAK,GAAG,MAAMJ,WAAW,CAACa,MAAZ,EAApB;AACAR,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAH8D,CAA/D;AAKA,QAAMU,sBAAsB,GAAGZ,QAAQ,CAACE,KAAD,EAAQE,MAAM,CAACE,IAAf,EAAqBF,MAAM,CAACG,KAA5B,CAAvC;;AAEA,QAAMM,SAAS,GAAIP,IAAD,IAAU;AAC1BD,IAAAA,SAAS,CAACC,IAAV,CAAeA,IAAf;AACD,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT,CAfa,CAmBb;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAKE,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEJ,MAApB;AAA4B,MAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA,YALF,EAOGI,aAAa,gBACZ;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADY,gBAKZ,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEb,KAAjB;AAAwB,MAAA,KAAK,EAAEA,KAAK,CAACc,MAAN,GAAe;AAA9C;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAtCQf,G;UAIwCJ,gB,EAKhBG,Q;;;KATxBC,G;AAwCT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ClueList from \"./components/search/ClueList\";\r\nimport { useFetchingClues } from \"./components/hooks/useFetchingClues\";\r\nimport ClueService from \"./components/API/ClueService\";\r\nimport Loader from \"./components/UI/Loader/Loader\";\r\nimport { useClues } from \"./components/hooks/useClues\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [clues, setClues] = useState([]);\r\n  const [filter, setFilter] = useState({ sort: \"\", query: \"\" });\r\n\r\n  const [fetchClues, isClueLoading, clueError] = useFetchingClues(async () => {\r\n    const clues = await ClueService.getAll();\r\n    setClues(clues);\r\n  });\r\n\r\n  const sortedAndSearchedClues = useClues(clues, filter.sort, filter.query);\r\n\r\n  const sortClues = (sort) => {\r\n    setFilter.sort(sort);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchClues();\r\n  }, []);\r\n\r\n  // const [modal, setModal] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <MyModal visible={modal} setVisible={setModal}>\r\n        <PostFrom create={createPost} />\r\n      </MyModal> */}\r\n\r\n      <ClueFilter filter={filter} setFilter={setFilter} />\r\n\r\n      {isClueLoading ? (\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Loader />\r\n        </div>\r\n      ) : (\r\n        <ClueList clues={clues} title={clues.length + \" Results found\"} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}