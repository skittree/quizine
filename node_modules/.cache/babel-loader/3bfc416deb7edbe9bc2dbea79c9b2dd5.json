{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keenm\\\\Desktop\\\\Web Final Project\\\\quizine\\\\src\\\\components\\\\UI\\\\select\\\\MySelect.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySelect = _ref => {\n  let {\n    options,\n    defaultValue,\n    value,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: value,\n    onChange: event => onChange(event.target.value),\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      disabled: true,\n      value: \"\",\n      children: defaultValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: option.value,\n      children: option.name\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MySelect;\nexport default MySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySelect\");","map":{"version":3,"sources":["C:/Users/keenm/Desktop/Web Final Project/quizine/src/components/UI/select/MySelect.jsx"],"names":["React","MySelect","options","defaultValue","value","onChange","event","target","map","option","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAG,QAAgD;AAAA,MAA/C;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,GAA+C;AAC/D,sBACE;AAAQ,IAAA,KAAK,EAAED,KAAf;AAAsB,IAAA,QAAQ,EAAGE,KAAD,IAAWD,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaH,KAAd,CAAnD;AAAA,4BACE;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,KAAK,EAAC,EAAvB;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,EAIGD,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACX;AAA2B,MAAA,KAAK,EAAEA,MAAM,CAACL,KAAzC;AAAA,gBACGK,MAAM,CAACC;AADV,OAAaD,MAAM,CAACL,KAApB;AAAA;AAAA;AAAA;AAAA,YADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;KAAMH,Q;AAeN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst MySelect = ({ options, defaultValue, value, onChange }) => {\r\n  return (\r\n    <select value={value} onChange={(event) => onChange(event.target.value)}>\r\n      <option disabled value=\"\">\r\n        {defaultValue}\r\n      </option>\r\n      {options.map((option) => (\r\n        <option key={option.value} value={option.value}>\r\n          {option.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default MySelect;\r\n"]},"metadata":{},"sourceType":"module"}