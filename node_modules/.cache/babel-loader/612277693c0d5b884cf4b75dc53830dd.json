{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keenm\\\\Desktop\\\\Web Final Project\\\\quizine\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useFetchingClues } from \"./components/hooks/useFetchingClues\";\nimport ClueService from \"./components/API/ClueService\";\nimport { useClues } from \"./components/hooks/useClues\";\nimport ClueFilter from \"./components/filter/ClueFilter\";\nimport { useCategories } from \"./components/hooks/useCategories\";\nimport { useFetchingCategories } from \"./components/hooks/useFetchingCategories\";\nimport CategoryService from \"./components/API/CategoryService\";\nimport Header from \"./components/Header.module/Header\";\nimport \"./App.css\";\nimport SearchResult from \"./components/SearchResult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search() {\n  _s();\n\n  const [clues, setClues] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: \"question\",\n    query: \"\",\n    difficulty: 0,\n    date: 0\n  });\n  const [modalTab, setModalTab] = useState(true);\n  const [fetchClues, isClueLoading, clueError] = useFetchingClues(async () => {\n    const clues = await ClueService.getAll();\n    setClues(clues);\n  });\n  const [fetchCategories, isCategoryLoading, categoryError] = useFetchingCategories(async () => {\n    const categories = await CategoryService.getAll();\n    setCategories(categories);\n  });\n  const sortedAndSearchedClues = useClues(clues, filter.sort, filter.query, filter.difficulty, filter.date);\n  const sortedAndSearchedCategories = useCategories(categories, filter.sort, filter.query);\n  useEffect(() => {\n    fetchClues();\n  }, []);\n  useEffect(() => {\n    fetchCategories();\n  }, []); // const [modal, setModal] = useState(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClueFilter, {\n      filter: filter,\n      setFilter: setFilter,\n      setModalTab: setModalTab,\n      modalTab: modalTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResult, {\n      filter: filter,\n      categories: sortedAndSearchedCategories,\n      clues: sortedAndSearchedClues,\n      isCategoryLoading: isCategoryLoading,\n      isClueLoading: isClueLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"newJcHe+B20UNZRMb+1h92eDINg=\", false, function () {\n  return [useFetchingClues, useFetchingCategories, useClues, useCategories];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/keenm/Desktop/Web Final Project/quizine/src/App.js"],"names":["React","useState","useEffect","useFetchingClues","ClueService","useClues","ClueFilter","useCategories","useFetchingCategories","CategoryService","Header","SearchResult","Search","clues","setClues","categories","setCategories","filter","setFilter","sort","query","difficulty","date","modalTab","setModalTab","fetchClues","isClueLoading","clueError","getAll","fetchCategories","isCategoryLoading","categoryError","sortedAndSearchedClues","sortedAndSearchedCategories"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,gBAAT,QAAiC,qCAAjC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,SAASC,qBAAT,QAAsC,0CAAtC;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,UAAD,EAAaC,aAAb,IAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC;AACnCkB,IAAAA,IAAI,EAAE,UAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,UAAU,EAAE,CAHuB;AAInCC,IAAAA,IAAI,EAAE;AAJ6B,GAAD,CAApC;AAMA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAM,CAACwB,UAAD,EAAaC,aAAb,EAA4BC,SAA5B,IAAyCxB,gBAAgB,CAAC,YAAY;AAC1E,UAAMU,KAAK,GAAG,MAAMT,WAAW,CAACwB,MAAZ,EAApB;AACAd,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAH8D,CAA/D;AAKA,QAAM,CAACgB,eAAD,EAAkBC,iBAAlB,EAAqCC,aAArC,IACJvB,qBAAqB,CAAC,YAAY;AAChC,UAAMO,UAAU,GAAG,MAAMN,eAAe,CAACmB,MAAhB,EAAzB;AACAZ,IAAAA,aAAa,CAACD,UAAD,CAAb;AACD,GAHoB,CADvB;AAMA,QAAMiB,sBAAsB,GAAG3B,QAAQ,CACrCQ,KADqC,EAErCI,MAAM,CAACE,IAF8B,EAGrCF,MAAM,CAACG,KAH8B,EAIrCH,MAAM,CAACI,UAJ8B,EAKrCJ,MAAM,CAACK,IAL8B,CAAvC;AAQA,QAAMW,2BAA2B,GAAG1B,aAAa,CAC/CQ,UAD+C,EAE/CE,MAAM,CAACE,IAFwC,EAG/CF,MAAM,CAACG,KAHwC,CAAjD;AAMAlB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACd2B,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT,CAxCgB,CA4ChB;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAIE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAME,QAAC,UAAD;AACE,MAAA,MAAM,EAAEZ,MADV;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,WAAW,EAAEM,WAHf;AAIE,MAAA,QAAQ,EAAED;AAJZ;AAAA;AAAA;AAAA;AAAA,YANF,eAYE,QAAC,YAAD;AACE,MAAA,MAAM,EAAEN,MADV;AAEE,MAAA,UAAU,EAAEgB,2BAFd;AAGE,MAAA,KAAK,EAAED,sBAHT;AAIE,MAAA,iBAAiB,EAAEF,iBAJrB;AAKE,MAAA,aAAa,EAAEJ;AALjB;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GApEQd,M;UAWwCT,gB,EAM7CK,qB,EAK6BH,Q,EAQKE,a;;;KA9B7BK,M;AAsET,eAAeA,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useFetchingClues } from \"./components/hooks/useFetchingClues\";\r\nimport ClueService from \"./components/API/ClueService\";\r\nimport { useClues } from \"./components/hooks/useClues\";\r\nimport ClueFilter from \"./components/filter/ClueFilter\";\r\nimport { useCategories } from \"./components/hooks/useCategories\";\r\nimport { useFetchingCategories } from \"./components/hooks/useFetchingCategories\";\r\nimport CategoryService from \"./components/API/CategoryService\";\r\nimport Header from \"./components/Header.module/Header\";\r\nimport \"./App.css\";\r\nimport SearchResult from \"./components/SearchResult\";\r\n\r\nfunction Search() {\r\n  const [clues, setClues] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [filter, setFilter] = useState({\r\n    sort: \"question\",\r\n    query: \"\",\r\n    difficulty: 0,\r\n    date: 0,\r\n  });\r\n  const [modalTab, setModalTab] = useState(true);\r\n\r\n  const [fetchClues, isClueLoading, clueError] = useFetchingClues(async () => {\r\n    const clues = await ClueService.getAll();\r\n    setClues(clues);\r\n  });\r\n\r\n  const [fetchCategories, isCategoryLoading, categoryError] =\r\n    useFetchingCategories(async () => {\r\n      const categories = await CategoryService.getAll();\r\n      setCategories(categories);\r\n    });\r\n\r\n  const sortedAndSearchedClues = useClues(\r\n    clues,\r\n    filter.sort,\r\n    filter.query,\r\n    filter.difficulty,\r\n    filter.date\r\n  );\r\n\r\n  const sortedAndSearchedCategories = useCategories(\r\n    categories,\r\n    filter.sort,\r\n    filter.query\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchClues();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  // const [modal, setModal] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <MyModal visible={modal} setVisible={setModal}>\r\n        <PostFrom create={createPost} />\r\n      </MyModal> */}\r\n      <Header></Header>\r\n\r\n      <ClueFilter\r\n        filter={filter}\r\n        setFilter={setFilter}\r\n        setModalTab={setModalTab}\r\n        modalTab={modalTab}\r\n      />\r\n      <SearchResult\r\n        filter={filter}\r\n        categories={sortedAndSearchedCategories}\r\n        clues={sortedAndSearchedClues}\r\n        isCategoryLoading={isCategoryLoading}\r\n        isClueLoading={isClueLoading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"]},"metadata":{},"sourceType":"module"}