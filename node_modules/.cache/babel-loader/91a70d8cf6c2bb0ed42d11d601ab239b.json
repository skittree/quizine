{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useMemo } from \"react\"; // export const useSortedClues = (clues, sort) => {\n//   const sortedClues = useMemo(() => {\n//     if (sort) {\n//       return [...clues].sort((a, b) => a[sort].localeCompare(b[sort]));\n//     }\n//     return clues;\n//   }, [sort, clues]);\n//   return sortedClues;\n// };\n\nexport const useCategories = (categories, sort, date, query) => {\n  _s();\n\n  const dateOptions = [new Date(\"2013-01-06T12:00:00.000Z\"), new Date(\"2015-01-01T12:00:00.000Z\"), new Date(\"2014-01-06T12:00:00.000Z\"), new Date(\"2014-01-01T12:00:00.000Z\")]; // const sortedClues = useSortedClues(clues, sort);\n\n  const sortedCategories = categories;\n  const sortedAndSearchedCategories = useMemo(() => {\n    return sortedCategories.filter(category => category.title.toLowerCase().includes(query.toLowerCase()).filter(category => dateOptions[date] < new Date(category.created_at)));\n  }, [query, date, sortedCategories]);\n  return sortedAndSearchedCategories;\n};\n\n_s(useCategories, \"BjyyKzgbAJd1L/kXrS2Rb1aiIq0=\");","map":{"version":3,"sources":["C:/Users/keenm/Desktop/Web Final Project/quizine/src/components/hooks/useCategories.js"],"names":["React","useMemo","useCategories","categories","sort","date","query","dateOptions","Date","sortedCategories","sortedAndSearchedCategories","filter","category","title","toLowerCase","includes","created_at"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,UAAD,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,KAAzB,KAAmC;AAAA;;AAC9D,QAAMC,WAAW,GAAG,CAClB,IAAIC,IAAJ,CAAS,0BAAT,CADkB,EAElB,IAAIA,IAAJ,CAAS,0BAAT,CAFkB,EAGlB,IAAIA,IAAJ,CAAS,0BAAT,CAHkB,EAIlB,IAAIA,IAAJ,CAAS,0BAAT,CAJkB,CAApB,CAD8D,CAQ9D;;AACA,QAAMC,gBAAgB,GAAGN,UAAzB;AACA,QAAMO,2BAA2B,GAAGT,OAAO,CAAC,MAAM;AAChD,WAAOQ,gBAAgB,CAACE,MAAjB,CAAyBC,QAAD,IAC7BA,QAAQ,CAACC,KAAT,CACGC,WADH,GAEGC,QAFH,CAEYT,KAAK,CAACQ,WAAN,EAFZ,EAGGH,MAHH,CAGWC,QAAD,IAAcL,WAAW,CAACF,IAAD,CAAX,GAAoB,IAAIG,IAAJ,CAASI,QAAQ,CAACI,UAAlB,CAH5C,CADK,CAAP;AAMD,GAP0C,EAOxC,CAACV,KAAD,EAAQD,IAAR,EAAcI,gBAAd,CAPwC,CAA3C;AASA,SAAOC,2BAAP;AACD,CApBM;;GAAMR,a","sourcesContent":["import React from \"react\";\r\nimport { useMemo } from \"react\";\r\n\r\n// export const useSortedClues = (clues, sort) => {\r\n//   const sortedClues = useMemo(() => {\r\n//     if (sort) {\r\n//       return [...clues].sort((a, b) => a[sort].localeCompare(b[sort]));\r\n//     }\r\n//     return clues;\r\n//   }, [sort, clues]);\r\n//   return sortedClues;\r\n// };\r\n\r\nexport const useCategories = (categories, sort, date, query) => {\r\n  const dateOptions = [\r\n    new Date(\"2013-01-06T12:00:00.000Z\"),\r\n    new Date(\"2015-01-01T12:00:00.000Z\"),\r\n    new Date(\"2014-01-06T12:00:00.000Z\"),\r\n    new Date(\"2014-01-01T12:00:00.000Z\"),\r\n  ];\r\n\r\n  // const sortedClues = useSortedClues(clues, sort);\r\n  const sortedCategories = categories;\r\n  const sortedAndSearchedCategories = useMemo(() => {\r\n    return sortedCategories.filter((category) =>\r\n      category.title\r\n        .toLowerCase()\r\n        .includes(query.toLowerCase())\r\n        .filter((category) => dateOptions[date] < new Date(category.created_at))\r\n    );\r\n  }, [query, date, sortedCategories]);\r\n\r\n  return sortedAndSearchedCategories;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}